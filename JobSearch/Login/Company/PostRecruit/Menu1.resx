<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>